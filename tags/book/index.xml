<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>book - Tag - spike014 site</title>
        <link>http://spike014.github.io/tags/book/</link>
        <description>book - Tag - spike014 site</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>spike014</copyright><lastBuildDate>Fri, 05 Aug 2022 11:11:53 &#43;0800</lastBuildDate><atom:link href="http://spike014.github.io/tags/book/" rel="self" type="application/rss+xml" /><item>
    <title>谷歌软件工程之道-2</title>
    <link>http://spike014.github.io/posts/software-engineering-at-google-2/</link>
    <pubDate>Fri, 05 Aug 2022 11:11:53 &#43;0800</pubDate>
    <author>spike014</author>
    <guid>http://spike014.github.io/posts/software-engineering-at-google-2/</guid>
    <description><![CDATA[《Software Engineering at Google》： 如何融入团队 知识共享 EN: https://abseil.io/resources/swe-book/html/toc.html CN: https://qiangmzsx.github.io/Software-Engineering-at-Google/#/ 一个好的事后总结应该包括以下内容： 事件的简要概述 事件的时间线，从发现、调查]]></description>
</item>
<item>
    <title>谷歌软件工程之道-1</title>
    <link>http://spike014.github.io/posts/aboutsoftware-engineering-at-google/</link>
    <pubDate>Wed, 03 Aug 2022 11:43:02 &#43;0800</pubDate>
    <author>spike014</author>
    <guid>http://spike014.github.io/posts/aboutsoftware-engineering-at-google/</guid>
    <description><![CDATA[《Software Engineering at Google》： 前言，序言 什么是软件工程？ EN: https://abseil.io/resources/swe-book/html/toc.html CN: https://qiangmzsx.github.io/Software-Engineering-at-Google/#/ 前言 技术的伟大之处在于，做一件事永远不会只有一种方法。相反，有一系列]]></description>
</item>
<item>
    <title>软件设计哲学 6-21</title>
    <link>http://spike014.github.io/posts/a-philosophy-of-software-design-6-21/</link>
    <pubDate>Mon, 01 Aug 2022 11:52:39 &#43;0800</pubDate>
    <author>spike014</author>
    <guid>http://spike014.github.io/posts/a-philosophy-of-software-design-6-21/</guid>
    <description><![CDATA[原书： 2018 ed : https://milkov.tech/assets/psd.pdf 2021 ed : https://web.stanford.edu/~ouster/cgi-bin/aposd2ndEdExtract.pdf 通用模块更深入 如果减少 API 中的方法数量而不降低其整体功能，则可能正在创建更多通用的方法。 在多少情况下会使用此方法？ 如果一]]></description>
</item>
<item>
    <title>软件设计哲学 1-5</title>
    <link>http://spike014.github.io/posts/about-a-philosophy-of-software-design-1-5/</link>
    <pubDate>Thu, 21 Jul 2022 10:20:27 &#43;0800</pubDate>
    <author>spike014</author>
    <guid>http://spike014.github.io/posts/about-a-philosophy-of-software-design-1-5/</guid>
    <description><![CDATA[原书： 2018 ed : https://milkov.tech/assets/psd.pdf 2021 ed : https://web.stanford.edu/~ouster/cgi-bin/aposd2ndEdExtract.pdf 复杂性 症状 变更放大：看似简单的变更需要在许多不同地方进行代码修改。 认知负荷：开发人员需要多少知识才能完成一项任务。较高]]></description>
</item>
</channel>
</rss>
